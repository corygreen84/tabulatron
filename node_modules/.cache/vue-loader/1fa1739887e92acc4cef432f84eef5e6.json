{"remainingRequest":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/corygreen/Desktop/tabulatron/tabulatron/src/components/Chord.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/src/components/Chord.vue","mtime":1643223943761},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/cache-loader/dist/cjs.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/babel-loader/lib/index.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/cache-loader/dist/cjs.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/vue-loader/lib/index.js","mtime":1642660804000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY2hvcmQ6IFtdLAogICAgICAgICAgICBjaG9yZE5hbWU6ICcnLAogICAgICAgICAgICBjdXJyZW50VHVuaW5nOiBbXQogICAgICAgIH0KICAgIH0sCiAgICBwcm9wczogeyAgICAKICAgICAgICB0YWJDb2x1bW46IHsKICAgICAgICAgICAgZGVmYXVsdDogMAogICAgICAgIH0sCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBnZXRDdXJyZW50U3RyaW5nQ291bnQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZWxldGVjdGVkTnVtYmVyT2ZTdHJpbmdzCiAgICAgICAgfSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdGFiRW50ZXJlZCgkZXZlbnQsIGkpewogICAgICAgICAgICBpZigkZXZlbnQgIT09ICcnKXsKICAgICAgICAgICAgICAgIGxldCBub3RlID0gewogICAgICAgICAgICAgICAgICAgIGZyZXQ6ICRldmVudCwKICAgICAgICAgICAgICAgICAgICBzdHJpbmc6IGksCiAgICAgICAgICAgICAgICAgICAgc3RyaW5nTm90ZTogdGhpcy5nZXRDdXJyZW50VHVuaW5nKClbaSAtIDFdLAogICAgICAgICAgICAgICAgICAgIG5ld05vdGU6ICcnCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBsZXQgcmV0dXJuZWROb3RlID0gdGhpcy5ub3RlTmFtZShub3RlKQogICAgICAgICAgICAgICAgbm90ZS5uZXdOb3RlID0gcmV0dXJuZWROb3RlCgogICAgICAgICAgICAgICAgaWYodGhpcy5jaG9yZC5sZW5ndGggPT09IDApewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hvcmQucHVzaChub3RlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAvLyBjaGVja2luZyB0byBzZWUgaWYgYSBub3RlIGV4aXN0cyBvbiB0aGUgc3RyaW5nIGFscmVhZHkgLy8KICAgICAgICAgICAgICAgIC8vIGlmIGl0IGRvZXMsIHJlcGxhY2UgaXQgd2l0aCB3aGF0cyBvbiB0aGUgZnJldCAvLwogICAgICAgICAgICAgICAgLy8gaWYgbm90LCB0aGVuIGFkZCBpdCAvLwogICAgICAgICAgICAgICAgY29uc3QgaW5kZXgxID0gdGhpcy5jaG9yZC5maW5kSW5kZXgoZWxlID0+IGVsZS5zdHJpbmcgPT09IG5vdGUuc3RyaW5nKQogICAgICAgICAgICAgICAgaWYoaW5kZXgxICE9PSAtMSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hvcmRbaW5kZXgxXSA9IG5vdGUKICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hvcmQucHVzaChub3RlKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgZW1wdHksIHJlbW92ZSBpdCBmcm9tIHRoZSBhcnJheSAvLwogICAgICAgICAgICAgICAgY29uc3QgaW5kZXgyID0gdGhpcy5jaG9yZC5maW5kSW5kZXgoZWxlID0+IGVsZS5zdHJpbmcgPT09IGkpCiAgICAgICAgICAgICAgICBpZihpbmRleDIgIT09IC0xKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaG9yZC5zcGxpY2UoaW5kZXgyLCAxKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHRoaXMuYW5hbHl6aW5nTm90ZXMoKQogICAgICAgIH0sCiAgICAgICAgZ2V0Q3VycmVudFR1bmluZygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm92ZXJhbGxUdW5pbmdOb3RlcwogICAgICAgIH0sCiAgICAgICAgbm90ZU5hbWUobm90ZSkgewogICAgICAgICAgICBsZXQgY3VycmVudFR1bmluZyA9IHRoaXMuZ2V0Q3VycmVudFR1bmluZygpCiAgICAgICAgICAgIGxldCBub3RlcyA9IHRoaXMuJHN0b3JlLnN0YXRlLnR1bmluZ3NMaXN0CgogICAgICAgICAgICBsZXQgc3RhcnRpbmdOb3RlID0gY3VycmVudFR1bmluZ1tub3RlLnN0cmluZyAtIDFdCiAgICAgICAgICAgIGxldCBlbnRlcmVkTm90ZUluZGV4ID0gbm90ZXMuaW5kZXhPZihzdGFydGluZ05vdGUpICsgcGFyc2VJbnQobm90ZS5mcmV0KQoKICAgICAgICAgICAgbGV0IGFjdHVhbE5vdGVJbmRleCA9IGVudGVyZWROb3RlSW5kZXggJSBub3Rlcy5sZW5ndGgKICAgICAgICAgICAgcmV0dXJuIG5vdGVzW2FjdHVhbE5vdGVJbmRleF0KICAgICAgICB9LAoKCgoKCgogICAgICAgIGFuYWx5emluZ05vdGVzKCkgewoKICAgICAgICAgICAgLy8gZmlyc3QgSSB0aGluayBJIG5lZWQgdG8gZ2V0IG15IGNob3JkIG5vdGUgY291bnQgLy8KICAgICAgICAgICAgbGV0IG5vdGVDb3VudEluQ2hvcmQgPSB0aGlzLmNob3JkLmxlbmd0aAogICAgICAgICAgICBjb25zb2xlLmxvZygnQ2hvcmQgbm90ZSBjb3VudCAtPiAnLCBub3RlQ291bnRJbkNob3JkKQogICAgICAgICAgICBmb3IodmFyIGwgaW4gdGhpcy5jaG9yZCkgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5jaG9yZFtsXS5uZXdOb3RlKQogICAgICAgICAgICB9CiAgICAgICAgfSwKCiAgICAgICAgZmlndXJlT3V0Um9vdE5vdGUoKSB7CiAgICAgICAgICAgIAogICAgICAgIH0KICAgIH0sCn0K"},{"version":3,"sources":["Chord.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","file":"Chord.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container class=\"pa-0\">\n      <v-row v-for=\"(i, index) in getCurrentStringCount + 1\" :key=\"index\" style=\"width: 40px; height: 30px;\">\n          <v-text-field v-if=\"index === getCurrentStringCount\" class=\"centered-input small-text-size\" @input=\"tabEntered($event, i)\" v-model=\"chordName\"></v-text-field>\n          <v-text-field v-else class=\"centered-input\" @input=\"tabEntered($event, i)\"></v-text-field>\n      </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chord: [],\n            chordName: '',\n            currentTuning: []\n        }\n    },\n    props: {    \n        tabColumn: {\n            default: 0\n        },\n    },\n    computed: {\n        getCurrentStringCount() {\n            return this.$store.state.seletectedNumberOfStrings\n        },\n    },\n    methods: {\n        tabEntered($event, i){\n            if($event !== ''){\n                let note = {\n                    fret: $event,\n                    string: i,\n                    stringNote: this.getCurrentTuning()[i - 1],\n                    newNote: ''\n                }\n                let returnedNote = this.noteName(note)\n                note.newNote = returnedNote\n\n                if(this.chord.length === 0){\n                    this.chord.push(note)\n                }\n                \n                // checking to see if a note exists on the string already //\n                // if it does, replace it with whats on the fret //\n                // if not, then add it //\n                const index1 = this.chord.findIndex(ele => ele.string === note.string)\n                if(index1 !== -1) {\n                    this.chord[index1] = note\n                }else{\n                    this.chord.push(note)\n                }\n            }else{\n                // if the string is empty, remove it from the array //\n                const index2 = this.chord.findIndex(ele => ele.string === i)\n                if(index2 !== -1) {\n                    this.chord.splice(index2, 1)\n                }\n            }\n            this.analyzingNotes()\n        },\n        getCurrentTuning() {\n            return this.$store.state.overallTuningNotes\n        },\n        noteName(note) {\n            let currentTuning = this.getCurrentTuning()\n            let notes = this.$store.state.tuningsList\n\n            let startingNote = currentTuning[note.string - 1]\n            let enteredNoteIndex = notes.indexOf(startingNote) + parseInt(note.fret)\n\n            let actualNoteIndex = enteredNoteIndex % notes.length\n            return notes[actualNoteIndex]\n        },\n\n\n\n\n\n\n        analyzingNotes() {\n\n            // first I think I need to get my chord note count //\n            let noteCountInChord = this.chord.length\n            console.log('Chord note count -> ', noteCountInChord)\n            for(var l in this.chord) {\n                console.log(this.chord[l].newNote)\n            }\n        },\n\n        figureOutRootNote() {\n            \n        }\n    },\n}\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<style scoped>\n    .centered-input >>> input{\n        text-align: center; \n        color: blue;\n        \n    }\n    .small-text-size {\n        font-size: 10px;\n    }\n    .v-text-field >>> .v-input__slot::before {\n        padding-top: 17px;\n        border-color: white;\n    }\n</style>"]}]}
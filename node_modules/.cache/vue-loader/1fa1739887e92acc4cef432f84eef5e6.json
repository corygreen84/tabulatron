{"remainingRequest":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/corygreen/Desktop/tabulatron/tabulatron/src/components/Chord.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/src/components/Chord.vue","mtime":1643518212894},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/cache-loader/dist/cjs.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/babel-loader/lib/index.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/cache-loader/dist/cjs.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/vue-loader/lib/index.js","mtime":1642660804000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY2hvcmQ6IFtdLAogICAgICAgICAgICBjaG9yZE5hbWU6ICcnLAogICAgICAgICAgICBjdXJyZW50VHVuaW5nOiBbXSwKICAgICAgICAgICAgcm9vdE5vdGU6IG51bGwKICAgICAgICB9CiAgICB9LAogICAgcHJvcHM6IHsgICAgCiAgICAgICAgdGFiQ29sdW1uOiB7CiAgICAgICAgICAgIGRlZmF1bHQ6IDAKICAgICAgICB9LAogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgZ2V0Q3VycmVudFN0cmluZ0NvdW50KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2VsZXRlY3RlZE51bWJlck9mU3RyaW5ncwogICAgICAgIH0sCiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIHRhYkVudGVyZWQoJGV2ZW50LCBpKXsKICAgICAgICAgICAgaWYoJGV2ZW50ICE9PSAnJyl7CiAgICAgICAgICAgICAgICBsZXQgbm90ZSA9IHsKICAgICAgICAgICAgICAgICAgICBmcmV0OiAkZXZlbnQsCiAgICAgICAgICAgICAgICAgICAgc3RyaW5nOiBpLAogICAgICAgICAgICAgICAgICAgIHN0cmluZ05vdGU6IHRoaXMuZ2V0Q3VycmVudFR1bmluZygpW2kgLSAxXSwKICAgICAgICAgICAgICAgICAgICBuZXdOb3RlOiAnJwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbGV0IHJldHVybmVkTm90ZSA9IHRoaXMubm90ZU5hbWUobm90ZSkKICAgICAgICAgICAgICAgIG5vdGUubmV3Tm90ZSA9IHJldHVybmVkTm90ZQoKICAgICAgICAgICAgICAgIGlmKHRoaXMuY2hvcmQubGVuZ3RoID09PSAwKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNob3JkLnB1c2gobm90ZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgLy8gY2hlY2tpbmcgdG8gc2VlIGlmIGEgbm90ZSBleGlzdHMgb24gdGhlIHN0cmluZyBhbHJlYWR5IC8vCiAgICAgICAgICAgICAgICAvLyBpZiBpdCBkb2VzLCByZXBsYWNlIGl0IHdpdGggd2hhdHMgb24gdGhlIGZyZXQgLy8KICAgICAgICAgICAgICAgIC8vIGlmIG5vdCwgdGhlbiBhZGQgaXQgLy8KICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4MSA9IHRoaXMuY2hvcmQuZmluZEluZGV4KGVsZSA9PiBlbGUuc3RyaW5nID09PSBub3RlLnN0cmluZykKICAgICAgICAgICAgICAgIGlmKGluZGV4MSAhPT0gLTEpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNob3JkW2luZGV4MV0gPSBub3RlCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICB0aGlzLmNob3JkLnB1c2gobm90ZSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAvLyBpZiB0aGUgc3RyaW5nIGlzIGVtcHR5LCByZW1vdmUgaXQgZnJvbSB0aGUgYXJyYXkgLy8KICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4MiA9IHRoaXMuY2hvcmQuZmluZEluZGV4KGVsZSA9PiBlbGUuc3RyaW5nID09PSBpKQogICAgICAgICAgICAgICAgaWYoaW5kZXgyICE9PSAtMSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuY2hvcmQuc3BsaWNlKGluZGV4MiwgMSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmFuYWx5emluZ05vdGVzKCkKICAgICAgICB9LAogICAgICAgIGdldEN1cnJlbnRUdW5pbmcoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5vdmVyYWxsVHVuaW5nTm90ZXMKICAgICAgICB9LAogICAgICAgIG5vdGVOYW1lKG5vdGUpIHsKICAgICAgICAgICAgbGV0IGN1cnJlbnRUdW5pbmcgPSB0aGlzLmdldEN1cnJlbnRUdW5pbmcoKQogICAgICAgICAgICBsZXQgbm90ZXMgPSB0aGlzLiRzdG9yZS5zdGF0ZS50dW5pbmdzTGlzdAoKICAgICAgICAgICAgbGV0IHN0YXJ0aW5nTm90ZSA9IGN1cnJlbnRUdW5pbmdbbm90ZS5zdHJpbmcgLSAxXQogICAgICAgICAgICBsZXQgZW50ZXJlZE5vdGVJbmRleCA9IG5vdGVzLmluZGV4T2Yoc3RhcnRpbmdOb3RlKSArIHBhcnNlSW50KG5vdGUuZnJldCkKCiAgICAgICAgICAgIGxldCBhY3R1YWxOb3RlSW5kZXggPSBlbnRlcmVkTm90ZUluZGV4ICUgbm90ZXMubGVuZ3RoCiAgICAgICAgICAgIHJldHVybiBub3Rlc1thY3R1YWxOb3RlSW5kZXhdCiAgICAgICAgfSwKCgoKCgoKICAgICAgICBhbmFseXppbmdOb3RlcygpIHsKCiAgICAgICAgICAgIC8vIGZpcnN0IEkgdGhpbmsgSSBuZWVkIHRvIGdldCBteSBjaG9yZCBub3RlIGNvdW50IC8vCiAgICAgICAgICAgIGxldCBub3RlQ291bnRJbkNob3JkID0gdGhpcy5jaG9yZC5sZW5ndGgKICAgICAgICAgICAgY29uc29sZS5sb2cobm90ZUNvdW50SW5DaG9yZCkKICAgICAgICAgICAgLy8gdGhlbiBJIG5lZWQgdG8gZ2V0IHRoZSByb290IG5vdGUgLy8KICAgICAgICAgICAgdGhpcy5yb290Tm90ZSA9IHRoaXMuZmlndXJlT3V0Um9vdE5vdGUoKQogICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnJvb3ROb3RlLm5ld05vdGUpCiAgICAgICAgfSwKCiAgICAgICAgZmlndXJlT3V0Um9vdE5vdGUoKSB7CiAgICAgICAgICAgIHRoaXMuY2hvcmQuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgICAgICAgcmV0dXJuIGEuc3RyaW5nIC0gYi5zdHJpbmc7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIHJldHVybiB0aGlzLmNob3JkW3RoaXMuY2hvcmQubGVuZ3RoIC0gMV0KICAgICAgICB9CiAgICB9LAp9Cg=="},{"version":3,"sources":["Chord.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chord.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container class=\"pa-0\">\n      <v-row v-for=\"(i, index) in getCurrentStringCount + 1\" :key=\"index\" style=\"width: 40px; height: 30px;\">\n          <v-text-field v-if=\"index === getCurrentStringCount\" class=\"centered-input small-text-size\" @input=\"tabEntered($event, i)\" v-model=\"chordName\"></v-text-field>\n          <v-text-field v-else class=\"centered-input\" @input=\"tabEntered($event, i)\"></v-text-field>\n      </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            chord: [],\n            chordName: '',\n            currentTuning: [],\n            rootNote: null\n        }\n    },\n    props: {    \n        tabColumn: {\n            default: 0\n        },\n    },\n    computed: {\n        getCurrentStringCount() {\n            return this.$store.state.seletectedNumberOfStrings\n        },\n    },\n    methods: {\n        tabEntered($event, i){\n            if($event !== ''){\n                let note = {\n                    fret: $event,\n                    string: i,\n                    stringNote: this.getCurrentTuning()[i - 1],\n                    newNote: ''\n                }\n                let returnedNote = this.noteName(note)\n                note.newNote = returnedNote\n\n                if(this.chord.length === 0){\n                    this.chord.push(note)\n                }\n                \n                // checking to see if a note exists on the string already //\n                // if it does, replace it with whats on the fret //\n                // if not, then add it //\n                const index1 = this.chord.findIndex(ele => ele.string === note.string)\n                if(index1 !== -1) {\n                    this.chord[index1] = note\n                }else{\n                    this.chord.push(note)\n                }\n            }else{\n                // if the string is empty, remove it from the array //\n                const index2 = this.chord.findIndex(ele => ele.string === i)\n                if(index2 !== -1) {\n                    this.chord.splice(index2, 1)\n                }\n            }\n            this.analyzingNotes()\n        },\n        getCurrentTuning() {\n            return this.$store.state.overallTuningNotes\n        },\n        noteName(note) {\n            let currentTuning = this.getCurrentTuning()\n            let notes = this.$store.state.tuningsList\n\n            let startingNote = currentTuning[note.string - 1]\n            let enteredNoteIndex = notes.indexOf(startingNote) + parseInt(note.fret)\n\n            let actualNoteIndex = enteredNoteIndex % notes.length\n            return notes[actualNoteIndex]\n        },\n\n\n\n\n\n\n        analyzingNotes() {\n\n            // first I think I need to get my chord note count //\n            let noteCountInChord = this.chord.length\n            console.log(noteCountInChord)\n            // then I need to get the root note //\n            this.rootNote = this.figureOutRootNote()\n            console.log(this.rootNote.newNote)\n        },\n\n        figureOutRootNote() {\n            this.chord.sort(function (a, b) {\n                return a.string - b.string;\n            })\n            return this.chord[this.chord.length - 1]\n        }\n    },\n}\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<style scoped>\n    .centered-input >>> input{\n        text-align: center; \n        color: blue;\n        \n    }\n    .small-text-size {\n        font-size: 10px;\n    }\n    .v-text-field >>> .v-input__slot::before {\n        padding-top: 17px;\n        border-color: white;\n    }\n</style>"]}]}
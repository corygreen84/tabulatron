{"remainingRequest":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/babel-loader/lib/index.js!/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/eslint-loader/index.js??ref--14-0!/Users/corygreen/Desktop/tabulatron/tabulatron/src/store/modules/triads.js","dependencies":[{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/src/store/modules/triads.js","mtime":1643221530476},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/babel.config.js","mtime":1642660855000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/cache-loader/dist/cjs.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/babel-loader/lib/index.js","mtime":1642660805000},{"path":"/Users/corygreen/Desktop/tabulatron/tabulatron/node_modules/eslint-loader/index.js","mtime":1642660805000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gYWxsIHRyaWFkIGRlZmluaXRpb25zIC8vCi8vIHJlbWVtYmVyIHdoZW4gYWNjZXNzaW5nIHRoZXNlIHRvIHN1YnRyYWN0IDEgZnJvbSAvLwovLyB0aGUgYXJyYXkgdG8gZ2V0IHRydWUgcG9zaXRpb24gd2l0aGluIHRoZSBvdmVybGF5aW5nIC8vCi8vIGFycmF5IC8vCnZhciBzdGF0ZSA9IHsKICBtYWpvcjogWzEsIDMsIDVdLAogIGF1Z21lbnRlZDogWzEsIDMsIDZdLAogIG1pbm9yOiBbMSwgMiwgNV0sCiAgZGltaW5pc2hlZDogWzEsIDIsIDRdLAogIHN1czQ6IFsxLCA0LCA1XSwKICBzdXMyOiBbMSwgMiwgNV0KfTsKZXhwb3J0IGRlZmF1bHQgewogIHN0YXRlOiBzdGF0ZQp9Ow=="},{"version":3,"sources":["/Users/corygreen/Desktop/tabulatron/tabulatron/src/store/modules/triads.js"],"names":["state","major","augmented","minor","diminished","sus4","sus2"],"mappings":"AACA;AACA;AACA;AACA;AACA,IAAMA,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADG;AAEVC,EAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFD;AAGVC,EAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHG;AAIVC,EAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJF;AAKVC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALI;AAMVC,EAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AANI,CAAd;AAUA,eAAe;AACXN,EAAAA,KAAK,EAALA;AADW,CAAf","sourcesContent":["\n// all triad definitions //\n// remember when accessing these to subtract 1 from //\n// the array to get true position within the overlaying //\n// array //\nconst state = {\n    major: [1, 3, 5],\n    augmented: [1, 3, 6],\n    minor: [1, 2, 5],\n    diminished: [1, 2, 4],\n    sus4: [1, 4, 5],\n    sus2: [1, 2, 5]\n}\n\n\nexport default {\n    state\n}\n\n\n"]}]}